State 61 conflicts: 4 shift/reduce
State 62 conflicts: 4 shift/reduce
State 63 conflicts: 4 shift/reduce
State 64 conflicts: 4 shift/reduce
State 74 conflicts: 5 shift/reduce
State 75 conflicts: 5 shift/reduce
State 77 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: DEBUT declarations EXECUTION instructions FIN

    2 declarations: /* empty */
    3             | declarations declaration

    4 declaration: NUM ':' IDF ';'
    5            | REAL ':' IDF ';'
    6            | TEXT ':' IDF ';'
    7            | FIXE NUM ':' IDF '=' NUMBER ';'

    8 instructions: /* empty */
    9             | instructions instruction

   10 instruction: IDF AFFECT expr ';'
   11            | SI '(' condition ')' ALORS instructions
   12            | SI '(' condition ')' ALORS instructions SINON instructions
   13            | TANTQUE '(' condition ')' FAIRE instructions
   14            | AFFICHE '(' STRING ')'
   15            | LIRE '(' IDF ')'

   16 expr: NUMBER
   17     | IDF
   18     | expr '+' expr
   19     | expr '-' expr
   20     | expr '*' expr
   21     | expr '/' expr

   22 condition: expr '=' expr
   23          | expr NEQ expr
   24          | expr '<' expr
   25          | expr '>' expr
   26          | expr LEQ expr
   27          | expr GEQ expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 12 13 14 15
')' (41) 11 12 13 14 15
'*' (42) 20
'+' (43) 18
'-' (45) 19
'/' (47) 21
':' (58) 4 5 6 7
';' (59) 4 5 6 7 10
'<' (60) 24
'=' (61) 7 22
'>' (62) 25
error (256)
NUMBER (258) 7 16
IDF (259) 4 5 6 7 10 15 17
STRING (260) 14
DEBUT (261) 1
FIN (262) 1
EXECUTION (263) 1
NUM (264) 4 7
REAL (265) 5
TEXT (266) 6
FIXE (267) 7
SI (268) 11 12
ALORS (269) 11 12
SINON (270) 12
TANTQUE (271) 13
FAIRE (272) 13
AFFICHE (273) 14
LIRE (274) 15
AFFECT (275) 10
NEQ (276) 23
LEQ (277) 26
GEQ (278) 27
IF_THEN (279)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
declarations (38)
    on left: 2 3, on right: 1 3
declaration (39)
    on left: 4 5 6 7, on right: 3
instructions (40)
    on left: 8 9, on right: 1 9 11 12 13
instruction (41)
    on left: 10 11 12 13 14 15, on right: 9
expr (42)
    on left: 16 17 18 19 20 21, on right: 10 18 19 20 21 22 23 24 25
    26 27
condition (43)
    on left: 22 23 24 25 26 27, on right: 11 12 13


state 0

    0 $accept: . program $end

    DEBUT  shift, and go to state 1

    program  go to state 2


state 1

    1 program: DEBUT . declarations EXECUTION instructions FIN

    $default  reduce using rule 2 (declarations)

    declarations  go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: DEBUT declarations . EXECUTION instructions FIN
    3 declarations: declarations . declaration

    EXECUTION  shift, and go to state 5
    NUM        shift, and go to state 6
    REAL       shift, and go to state 7
    TEXT       shift, and go to state 8
    FIXE       shift, and go to state 9

    declaration  go to state 10


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: DEBUT declarations EXECUTION . instructions FIN

    $default  reduce using rule 8 (instructions)

    instructions  go to state 11


state 6

    4 declaration: NUM . ':' IDF ';'

    ':'  shift, and go to state 12


state 7

    5 declaration: REAL . ':' IDF ';'

    ':'  shift, and go to state 13


state 8

    6 declaration: TEXT . ':' IDF ';'

    ':'  shift, and go to state 14


state 9

    7 declaration: FIXE . NUM ':' IDF '=' NUMBER ';'

    NUM  shift, and go to state 15


state 10

    3 declarations: declarations declaration .

    $default  reduce using rule 3 (declarations)


state 11

    1 program: DEBUT declarations EXECUTION instructions . FIN
    9 instructions: instructions . instruction

    IDF      shift, and go to state 16
    FIN      shift, and go to state 17
    SI       shift, and go to state 18
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 20
    LIRE     shift, and go to state 21

    instruction  go to state 22


state 12

    4 declaration: NUM ':' . IDF ';'

    IDF  shift, and go to state 23


state 13

    5 declaration: REAL ':' . IDF ';'

    IDF  shift, and go to state 24


state 14

    6 declaration: TEXT ':' . IDF ';'

    IDF  shift, and go to state 25


state 15

    7 declaration: FIXE NUM . ':' IDF '=' NUMBER ';'

    ':'  shift, and go to state 26


state 16

   10 instruction: IDF . AFFECT expr ';'

    AFFECT  shift, and go to state 27


state 17

    1 program: DEBUT declarations EXECUTION instructions FIN .

    $default  reduce using rule 1 (program)


state 18

   11 instruction: SI . '(' condition ')' ALORS instructions
   12            | SI . '(' condition ')' ALORS instructions SINON instructions

    '('  shift, and go to state 28


state 19

   13 instruction: TANTQUE . '(' condition ')' FAIRE instructions

    '('  shift, and go to state 29


state 20

   14 instruction: AFFICHE . '(' STRING ')'

    '('  shift, and go to state 30


state 21

   15 instruction: LIRE . '(' IDF ')'

    '('  shift, and go to state 31


state 22

    9 instructions: instructions instruction .

    $default  reduce using rule 9 (instructions)


state 23

    4 declaration: NUM ':' IDF . ';'

    ';'  shift, and go to state 32


state 24

    5 declaration: REAL ':' IDF . ';'

    ';'  shift, and go to state 33


state 25

    6 declaration: TEXT ':' IDF . ';'

    ';'  shift, and go to state 34


state 26

    7 declaration: FIXE NUM ':' . IDF '=' NUMBER ';'

    IDF  shift, and go to state 35


state 27

   10 instruction: IDF AFFECT . expr ';'

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 38


state 28

   11 instruction: SI '(' . condition ')' ALORS instructions
   12            | SI '(' . condition ')' ALORS instructions SINON instructions

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr       go to state 39
    condition  go to state 40


state 29

   13 instruction: TANTQUE '(' . condition ')' FAIRE instructions

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr       go to state 39
    condition  go to state 41


state 30

   14 instruction: AFFICHE '(' . STRING ')'

    STRING  shift, and go to state 42


state 31

   15 instruction: LIRE '(' . IDF ')'

    IDF  shift, and go to state 43


state 32

    4 declaration: NUM ':' IDF ';' .

    $default  reduce using rule 4 (declaration)


state 33

    5 declaration: REAL ':' IDF ';' .

    $default  reduce using rule 5 (declaration)


state 34

    6 declaration: TEXT ':' IDF ';' .

    $default  reduce using rule 6 (declaration)


state 35

    7 declaration: FIXE NUM ':' IDF . '=' NUMBER ';'

    '='  shift, and go to state 44


state 36

   16 expr: NUMBER .

    $default  reduce using rule 16 (expr)


state 37

   17 expr: IDF .

    $default  reduce using rule 17 (expr)


state 38

   10 instruction: IDF AFFECT expr . ';'
   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr

    ';'  shift, and go to state 45
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49


state 39

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22 condition: expr . '=' expr
   23          | expr . NEQ expr
   24          | expr . '<' expr
   25          | expr . '>' expr
   26          | expr . LEQ expr
   27          | expr . GEQ expr

    NEQ  shift, and go to state 50
    LEQ  shift, and go to state 51
    GEQ  shift, and go to state 52
    '='  shift, and go to state 53
    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


state 40

   11 instruction: SI '(' condition . ')' ALORS instructions
   12            | SI '(' condition . ')' ALORS instructions SINON instructions

    ')'  shift, and go to state 56


state 41

   13 instruction: TANTQUE '(' condition . ')' FAIRE instructions

    ')'  shift, and go to state 57


state 42

   14 instruction: AFFICHE '(' STRING . ')'

    ')'  shift, and go to state 58


state 43

   15 instruction: LIRE '(' IDF . ')'

    ')'  shift, and go to state 59


state 44

    7 declaration: FIXE NUM ':' IDF '=' . NUMBER ';'

    NUMBER  shift, and go to state 60


state 45

   10 instruction: IDF AFFECT expr ';' .

    $default  reduce using rule 10 (instruction)


state 46

   18 expr: expr '+' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 61


state 47

   19 expr: expr '-' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 62


state 48

   20 expr: expr '*' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 63


state 49

   21 expr: expr '/' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 64


state 50

   23 condition: expr NEQ . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 65


state 51

   26 condition: expr LEQ . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 66


state 52

   27 condition: expr GEQ . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 67


state 53

   22 condition: expr '=' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 68


state 54

   24 condition: expr '<' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 69


state 55

   25 condition: expr '>' . expr

    NUMBER  shift, and go to state 36
    IDF     shift, and go to state 37

    expr  go to state 70


state 56

   11 instruction: SI '(' condition ')' . ALORS instructions
   12            | SI '(' condition ')' . ALORS instructions SINON instructions

    ALORS  shift, and go to state 71


state 57

   13 instruction: TANTQUE '(' condition ')' . FAIRE instructions

    FAIRE  shift, and go to state 72


state 58

   14 instruction: AFFICHE '(' STRING ')' .

    $default  reduce using rule 14 (instruction)


state 59

   15 instruction: LIRE '(' IDF ')' .

    $default  reduce using rule 15 (instruction)


state 60

    7 declaration: FIXE NUM ':' IDF '=' NUMBER . ';'

    ';'  shift, and go to state 73


state 61

   18 expr: expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    '+'       [reduce using rule 18 (expr)]
    '-'       [reduce using rule 18 (expr)]
    '*'       [reduce using rule 18 (expr)]
    '/'       [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)


state 62

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | expr . '*' expr
   21     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    '+'       [reduce using rule 19 (expr)]
    '-'       [reduce using rule 19 (expr)]
    '*'       [reduce using rule 19 (expr)]
    '/'       [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


state 63

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   20     | expr '*' expr .
   21     | expr . '/' expr

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    '+'       [reduce using rule 20 (expr)]
    '-'       [reduce using rule 20 (expr)]
    '*'       [reduce using rule 20 (expr)]
    '/'       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 64

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   21     | expr '/' expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    '+'       [reduce using rule 21 (expr)]
    '-'       [reduce using rule 21 (expr)]
    '*'       [reduce using rule 21 (expr)]
    '/'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


state 65

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   23 condition: expr NEQ expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 23 (condition)


state 66

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   26 condition: expr LEQ expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 26 (condition)


state 67

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   27 condition: expr GEQ expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 27 (condition)


state 68

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   22 condition: expr '=' expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 22 (condition)


state 69

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   24 condition: expr '<' expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 24 (condition)


state 70

   18 expr: expr . '+' expr
   19     | expr . '-' expr
   20     | expr . '*' expr
   21     | expr . '/' expr
   25 condition: expr '>' expr .

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 25 (condition)


state 71

   11 instruction: SI '(' condition ')' ALORS . instructions
   12            | SI '(' condition ')' ALORS . instructions SINON instructions

    $default  reduce using rule 8 (instructions)

    instructions  go to state 74


state 72

   13 instruction: TANTQUE '(' condition ')' FAIRE . instructions

    $default  reduce using rule 8 (instructions)

    instructions  go to state 75


state 73

    7 declaration: FIXE NUM ':' IDF '=' NUMBER ';' .

    $default  reduce using rule 7 (declaration)


state 74

    9 instructions: instructions . instruction
   11 instruction: SI '(' condition ')' ALORS instructions .
   12            | SI '(' condition ')' ALORS instructions . SINON instructions

    IDF      shift, and go to state 16
    SI       shift, and go to state 18
    SINON    shift, and go to state 76
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 20
    LIRE     shift, and go to state 21

    IDF       [reduce using rule 11 (instruction)]
    SI        [reduce using rule 11 (instruction)]
    TANTQUE   [reduce using rule 11 (instruction)]
    AFFICHE   [reduce using rule 11 (instruction)]
    LIRE      [reduce using rule 11 (instruction)]
    $default  reduce using rule 11 (instruction)

    instruction  go to state 22


state 75

    9 instructions: instructions . instruction
   13 instruction: TANTQUE '(' condition ')' FAIRE instructions .

    IDF      shift, and go to state 16
    SI       shift, and go to state 18
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 20
    LIRE     shift, and go to state 21

    IDF       [reduce using rule 13 (instruction)]
    SI        [reduce using rule 13 (instruction)]
    TANTQUE   [reduce using rule 13 (instruction)]
    AFFICHE   [reduce using rule 13 (instruction)]
    LIRE      [reduce using rule 13 (instruction)]
    $default  reduce using rule 13 (instruction)

    instruction  go to state 22


state 76

   12 instruction: SI '(' condition ')' ALORS instructions SINON . instructions

    $default  reduce using rule 8 (instructions)

    instructions  go to state 77


state 77

    9 instructions: instructions . instruction
   12 instruction: SI '(' condition ')' ALORS instructions SINON instructions .

    IDF      shift, and go to state 16
    SI       shift, and go to state 18
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 20
    LIRE     shift, and go to state 21

    IDF       [reduce using rule 12 (instruction)]
    SI        [reduce using rule 12 (instruction)]
    TANTQUE   [reduce using rule 12 (instruction)]
    AFFICHE   [reduce using rule 12 (instruction)]
    LIRE      [reduce using rule 12 (instruction)]
    $default  reduce using rule 12 (instruction)

    instruction  go to state 22
